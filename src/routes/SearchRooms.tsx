import { useEffect, useState } from 'react';
import { useDebounce } from 'use-debounce';
import RouteContainer from '../components/RouteContainer';
import SearchBar from '../components/search/SearchBar';
import createClient from 'openapi-fetch';
import type { paths } from '../api/schema'; // generated by openapi-typescript

const client = createClient<paths>({ baseUrl: import.meta.env.VITE_API_URL });

interface Building {
  readonly id: number;
  name: string;
  address: string;
  department?: string;
  description?: string;
}

function SearchRooms() {
  const [results, setResults] = useState<Building[]>([]);
  const [isLoading, setIsLoading] = useState(false);
  const [searchQuery, setSearchQuery] = useState('');
  const [searchQueryValue] = useDebounce(searchQuery, 400);

  const handleSearch = async (searchQuery: string) => {
    setIsLoading(true);
    const params = { query: { search: searchQuery } };
    const { data, response } = await client.GET('/api/buildings/', {
      credentials: 'include',
      params,
    });

    if (!response.ok) throw new Error('search failed');

    console.log(data ?? []);
    setResults(data ?? []);
    setIsLoading(false);
  };

  useEffect(() => {
    handleSearch(searchQueryValue);
  }, [searchQueryValue]);

  return (
    <RouteContainer>
      <div className='grid grid-cols-[1fr_4fr_1fr]'>
        <div></div>
        <div className='min-h-80'>
          <SearchBar onUpdate={setSearchQuery} />
          {searchQuery === '' ? (
            <div>Type building name to search...</div>
          ) : (
            <div>
              {results.map(({ id, name }) => (
                <div key={id}>{name}</div>
              ))}
            </div>
          )}
        </div>
        <div></div>
      </div>
    </RouteContainer>
  );
}

export default SearchRooms;
