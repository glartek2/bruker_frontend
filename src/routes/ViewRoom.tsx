import RouteContainer from '../components/RouteContainer';
import {useParams} from 'react-router';
import createClient from 'openapi-fetch';
import type {paths, components} from '../api/schema'; // generated by openapi-typescript
import {useEffect, useState} from 'react';
import {ScheduleVariant} from "../components/room/WeekSchedule.tsx";
import WeekScheduleViewer from "../components/room/WeekScheduleViewer.tsx";
import {useTrigger} from "../hooks/trigger.ts";
import ReserveBulkModal from "../components/modal/ReserveBulkModal.tsx";

const client = createClient<paths>({baseUrl: import.meta.env.VITE_API_URL});

type Room = components['schemas']['Room'];

function ViewRoom() {
    const {roomId, weekId} = useParams();
    const [room, setRoom] = useState<Room>();
    const [trigger, invalidate] = useTrigger();

    useEffect(() => {
        const get = async () => {
            const params = {path: {id: parseInt(roomId ?? '')}};
            const {data, response} = await client.GET('/api/rooms/{id}/', {
                credentials: 'include',
                params,
            });

            if (!response.ok) throw new Error('search failed');

            setRoom(data);
        };
        get();
    }, [roomId]);

    return (
        <RouteContainer>
            <ReserveBulkModal roomId={parseInt(roomId ?? '')}/>
            <div className='hero bg-base-200 min-h-screen'>
                <div className='hero-content'>
                    <WeekScheduleViewer
                        variant={ScheduleVariant.NEW}
                        trigger={trigger}
                    />
                </div>
            </div>
        </RouteContainer>
    );
}

export default ViewRoom;
