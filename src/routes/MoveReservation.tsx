import { useParams } from 'react-router';
import RouteContainer from '../components/RouteContainer';
import createClient from 'openapi-fetch';
import type { paths } from '../api/schema'; // generated by openapi-typescript
import { useEffect, useState } from 'react';
import WeekScheduleViewer from '../components/room/WeekScheduleViewer';
import { ScheduleVariant } from '../components/room/WeekSchedule';
import ReserveEmptyModal from '../components/modal/ReserveEmptyModal';
import ViewAcceptedModal from '../components/modal/ViewAcceptedModal';
import ViewProposedModal from '../components/modal/ViewProposedModal';
import { EquipmentDetails, roomEquipmentQuery } from '../model/reservation';
import { useAppContext } from '../context/AppContext';

const client = createClient<paths>({ baseUrl: import.meta.env.VITE_API_URL });

function MoveReservation() {
  const { action, reservationId } = useParams();

  const { state } = useAppContext();

  const reservationIdInt = parseInt(reservationId ?? '');
  const [detailsQuery, setDetailsQuery] = useState<EquipmentDetails>({});

  useEffect(() => {
    async function fetchRoomDetails() {
      const { data, error } = await client.GET('/api/reservation/{id}/', {
        headers: {
          Authorization: 'Token ' + state?.user?.token,
        },
        params: { path: { id: reservationIdInt } },
      });
      if (!error) {
        const details = (data.room.equipment.details ?? {}) as EquipmentDetails;
        console.log(details);
        setDetailsQuery(roomEquipmentQuery(details, data.room.capacity));
      }
    }
    fetchRoomDetails();
  }, [reservationIdInt, state?.user?.token]);

  return (
    <RouteContainer>
      {/* <EditAcceptedModal /> */}
      <ReserveEmptyModal detailsQuery={detailsQuery} />
      <ViewAcceptedModal />
      <ViewProposedModal />
      <div className='hero bg-base-200 min-h-screen'>
        <div className='hero-content'>
          <WeekScheduleViewer variant={ScheduleVariant.MOVE} />
        </div>
      </div>
    </RouteContainer>
  );
}

export default MoveReservation;
