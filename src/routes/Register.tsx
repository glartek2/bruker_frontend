import React, { useContext, useState } from 'react';
import { useNavigate } from 'react-router';
import RouteContainer from '../components/RouteContainer';
import { AppContext } from '../context/AppContext';
import createClient from 'openapi-fetch';
import type { paths } from '../api/schema'; // generated by openapi-typescript
import { ActionType } from '../context/reducer';
import { badCredentialsModalId, showModal } from '../components/modal/modals';
import BadCredentialsModal from '../components/modal/BadCredentialsModal';

const client = createClient<paths>({ baseUrl: import.meta.env.VITE_API_URL });

const Register = () => {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [password2, setPassword2] = useState('');
  const { dispatch } = useContext(AppContext)!;
  const navigate = useNavigate();

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();

    const {
      data, // only present if 2XX response
      error,
    } = await client.POST('/users/register/', {
      credentials: 'include',
      headers: {
        'Content-Type': 'application/json',
      },
      body: {
        username: email,
        email,
        password,
        password2,
      },
    });

    if (!error) {
      dispatch({ type: ActionType.SET_USER, payload: data });
      navigate('/profile');
    } else {
      showModal(badCredentialsModalId);
    }
  };

  return (
    <RouteContainer>
      <BadCredentialsModal />
      <div className='hero bg-base-200 min-h-screen'>
        <div className='hero-content flex-col'>
          <div className='rounded-box grid p-4 space-y-4'>
            <div className='text-center'>
              <h1 className='text-5xl font-bold'>Utwórz konto</h1>
            </div>
            <div className='card shrink-0 w-full max-w-sm shadow-2xl'>
              <form className='card-body'>
                <div className='form-control'>
                  <label className='label'>
                    <span className='label-text'>Email</span>
                  </label>
                  <input
                    type='email'
                    className='input input-bordered'
                    required
                    value={email}
                    onChange={e => setEmail(e.target.value)}
                  />
                </div>
                <div className='form-control'>
                  <label className='label'>
                    <span className='label-text'>Hasło</span>
                  </label>
                  <input
                    type='password'
                    className='input input-bordered'
                    required
                    value={password}
                    onChange={e => setPassword(e.target.value)}
                  />
                </div>
                <div className='form-control'>
                  <label className='label'>
                    <span className='label-text'>Powtórz hasło</span>
                  </label>
                  <input
                    type='password'
                    className='input input-bordered'
                    required
                    value={password2}
                    onChange={e => setPassword2(e.target.value)}
                  />
                </div>
                <div className='form-control mt-6 flex flex-row justify-center'>
                  <button onClick={handleSubmit} className='btn btn-primary'>
                    Zarejestruj się
                  </button>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
    </RouteContainer>
  );
};

export default Register;
