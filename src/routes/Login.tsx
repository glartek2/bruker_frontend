import React, { useContext, useState } from 'react';
import { NavLink, useNavigate } from 'react-router';
import RouteContainer from '../components/RouteContainer';
import { AppContext } from '../context/AppContext';
import createClient from 'openapi-fetch';
import type { paths } from '../api/schema'; // generated by openapi-typescript
import { ActionType } from '../context/reducer';

const client = createClient<paths>({ baseUrl: import.meta.env.VITE_API_URL });

const Login = () => {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const { dispatch } = useContext(AppContext)!;
  const navigate = useNavigate();

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();

    try {
      const {
        data, // only present if 2XX response
        // error, // only present if 4XX or 5XX response
        response,
      } = await client.POST('/users/login/', {
        credentials: 'include',
        headers: {
          'Content-Type': 'application/json',
        },
        body: {
          username,
          password,
        },
      });

      if (!response.ok) throw new Error('Login failed');

      dispatch({ type: ActionType.SET_USER, payload: data });
      navigate('/profile');
    } catch (error) {
      console.error(error);
      alert('Niepoprawne dane logowania');
    }
  };

  return (
    <RouteContainer>
      <div className='hero bg-base-200 min-h-screen'>
        <div className='hero-content'>
          <div className='flex w-full flex-col'>
            <div className='rounded-box grid p-4 space-y-4 place-items-center'>
              <div className='text-center'>
                <h1 className='text-5xl font-bold'>Zaloguj się</h1>
              </div>
              <div className='card shrink-0 w-full max-w-sm shadow-2xl'>
                <form className='card-body' onSubmit={handleSubmit}>
                  <div className='form-control'>
                    <label className='label'>
                      <span className='label-text'>Email</span>
                    </label>
                    <input
                      type='email'
                      placeholder='email'
                      className='input input-bordered'
                      required
                      value={username}
                      onChange={e => setUsername(e.target.value)}
                    />
                  </div>
                  <div className='form-control'>
                    <label className='label'>
                      <span className='label-text'>Hasło</span>
                    </label>
                    <input
                      type='password'
                      placeholder='hasło'
                      className='input input-bordered'
                      required
                      value={password}
                      onChange={e => setPassword(e.target.value)}
                    />
                  </div>
                  <div className='form-control mt-6 flex content-center'>
                    <button type='submit' className='btn btn-primary'>
                      Zaloguj się
                    </button>
                  </div>
                </form>
              </div>
            </div>
            <div className='divider'></div>
            <div className='rounded-box grid p-4 space-y-4 place-items-center'>
              <div className='text-center'>
                <h1 className='text-3xl font-bold'>Nie masz konta?</h1>
              </div>
              <NavLink to='/register' className='btn'>
                Zarejestruj się
              </NavLink>
            </div>

            {/* <div className='card bg-base-300 rounded-box grid h-20 place-items-center'>
              <div className='text-center'>
                <h1 className='text-5xl font-bold'>Zaloguj się</h1>
              </div>
              <div className='card shrink-0 w-full max-w-sm shadow-2xl bg-base-100'>
                <form className='card-body' onSubmit={handleSubmit}>
                  <div className='form-control'>
                    <label className='label'>
                      <span className='label-text'>Email</span>
                    </label>
                    <input
                      type='email'
                      placeholder='email'
                      className='input input-bordered'
                      required
                      value={username}
                      onChange={e => setUsername(e.target.value)}
                    />
                  </div>
                  <div className='form-control'>
                    <label className='label'>
                      <span className='label-text'>Hasło</span>
                    </label>
                    <input
                      type='password'
                      placeholder='hasło'
                      className='input input-bordered'
                      required
                      value={password}
                      onChange={e => setPassword(e.target.value)}
                    />
                  </div>
                  <div className='form-control mt-6'>
                    <button type='submit' className='btn btn-primary'>
                      Zaloguj się
                    </button>
                  </div>
                </form>
              </div>
            </div>
            <div className='divider'>OR</div>
            <div className='card bg-base-300 rounded-box grid h-20 place-items-center'>
              <NavLink to='/register' className='btn'>
                Zarejestruj się
              </NavLink>
            </div> */}
          </div>
        </div>
      </div>
    </RouteContainer>
  );
};

export default Login;
